{
    "title": "TypeScript Basics: Enhancing JavaScript with Types",
    "content": "TypeScript is a superset of JavaScript that introduces static types. It makes JavaScript more robust by catching errors during development, allowing for better code quality. Letâ€™s dive into the basics of TypeScript.\n\n## Type Annotations\n\nIn TypeScript, you can explicitly declare the types of variables, which prevents unintended type errors:\n\n```typescript\nlet age: number = 25;\nlet name: string = 'Alice';\nlet isStudent: boolean = true;\n```\n\n## Interfaces\n\nInterfaces define the structure of an object and ensure that an object adheres to a specific shape:\n\n```typescript\ninterface User {\n  name: string;\n  age: number;\n}\n\nlet user: User = {\n  name: 'John',\n  age: 30\n};\n```\n\n## Functions with Types\n\nYou can specify the types for function arguments and return values:\n\n```typescript\nfunction greet(name: string): string {\n  return `Hello, ${name}!`;\n}\n```\n\n## Classes in TypeScript\n\nClasses are a core feature in TypeScript and allow you to create reusable blueprints for objects:\n\n```typescript\nclass Animal {\n  name: string;\n  constructor(name: string) {\n    this.name = name;\n  }\n  speak(): void {\n    console.log(`${this.name} makes a sound.`);\n  }\n}\n```\n\n### Conclusion\n\nTypeScript provides a safer and more structured way to write JavaScript. With type annotations, interfaces, and classes, you'll write cleaner and more maintainable code.",
    "author": "Jaydip Satani",
    "slug": "how-to-learn-typexcript-basics"
}