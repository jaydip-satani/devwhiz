{
    "title": "Python Basics: Data Types, Variables, and Control Structures",
    "content": "Python is a versatile programming language known for its readability and simplicity. It is widely used for web development, data analysis, automation, and more. In this post, we will cover the basic concepts like data types, variables, and control structures that are essential to getting started with Python.\n\n## Data Types in Python\n\nPython provides several built-in data types:\n\n1. **Integers**: Whole numbers, positive or negative. Example:\n\n```python\nage = 25\n```\n\n2. **Floats**: Numbers with a decimal point. Example:\n\n```python\nprice = 19.99\n```\n\n3. **Strings**: Text enclosed in single or double quotes. Example:\n\n```python\nname = 'Alice'\n```\n\n4. **Booleans**: Represents `True` or `False`. Example:\n\n```python\nis_student = True\n```\n\n5. **Lists**: Ordered collection of items. Example:\n\n```python\nfruits = ['apple', 'banana', 'cherry']\n```\n\n6. **Dictionaries**: Collection of key-value pairs. Example:\n\n```python\nperson = {'name': 'Alice', 'age': 30}\n```\n\n## Variables in Python\n\nIn Python, variables are dynamically typed, meaning you don't need to declare their type beforehand. For example:\n\n```python\nx = 5  # integer\nx = 'Hello'  # now it's a string\n```\n\n## Control Structures in Python\n\n### If-Else Statements\n\nConditional statements allow you to execute different blocks of code based on certain conditions:\n\n```python\nage = 18\n\nif age >= 18:\n    print('You are an adult.')\nelse:\n    print('You are a minor.')\n```\n\n### For Loop\n\nA `for` loop in Python is used to iterate over a sequence of elements like lists, strings, or ranges:\n\n```python\nfor fruit in ['apple', 'banana', 'cherry']:\n    print(fruit)\n```\n\n### While Loop\n\nThe `while` loop runs as long as a specified condition is true:\n\n```python\ni = 0\nwhile i < 5:\n    print(i)\n    i += 1\n```\n\n### Functions in Python\n\nFunctions are blocks of reusable code. You define a function using the `def` keyword:\n\n```python\ndef greet(name):\n    return f'Hello, {name}!'\n\nprint(greet('Alice'))\n```\n\n### Conclusion\n\nPython's simplicity and powerful features make it a great language for beginners. By mastering the basics of data types, control structures, and functions, you'll be able to build your first Python programs in no time.",
    "author": "Jaydip Satani",
    "slug": "how-to-learn-python-basics"
}