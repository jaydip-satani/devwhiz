{
    "title": "C Programming Basics: Variables, Data Types, and Control Structures",
    "content": "C is a powerful, low-level programming language used for system programming, embedded systems, and more. It provides fine-grained control over memory and hardware. Letâ€™s cover the basics of C programming.\n\n## Data Types in C\n\nC has several primitive data types, including:\n\n- **int**: For integers\n- **float**: For floating-point numbers\n- **char**: For single characters\n\nExample:\n\n```c\nint age = 25;\nfloat height = 5.9;\nchar grade = 'A';\n```\n\n## Control Structures\n\n### If-Else Statements\n\nControl the flow of your program using conditional statements:\n\n```c\nif (age >= 18) {\n  printf(\"You are an adult.\");\n} else {\n  printf(\"You are a minor.\");\n}\n```\n\n### Loops\n\nC provides both `for` and `while` loops. Example of a `for` loop:\n\n```c\nfor (int i = 0; i < 5; i++) {\n  printf(\"%d\\n\", i);\n}\n```\n\n## Functions in C\n\nFunctions in C are defined using the return type, function name, and parameters:\n\n```c\nint add(int a, int b) {\n  return a + b;\n}\n\nprintf(\"Sum: %d\", add(3, 4));\n```\n\n### Conclusion\n\nC provides a solid foundation for understanding low-level programming concepts. By mastering variables, control structures, and functions, you can start building efficient programs in C.",
    "author": "Jaydip Satani",
    "slug": "how-to-learn-c-programming-basics"
}